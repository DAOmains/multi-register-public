{"version":3,"sources":["Header.tsx","EnterNames.tsx","Register.tsx","Body.tsx","Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx","web3/index.tsx","Button.tsx","../contracts/typechain/factories/IETHRegistrarController__factory.ts","../contracts/typechain/factories/MultiRegister__factory.ts","data/data.ts","data/contracts.ts","data/index.tsx","web3/chains.ts","web3/providers.ts","web3/listeners.ts","web3/transactions.ts","Commit.tsx"],"names":["Header","account","useWeb3","className","Button","onClick","connect","disabled","href","target","rel","substring","slice","GoodName","name","duration","addToTotalCost","registrar","useData","contracts","useState","fullName","price","setPrice","useEffect","rentPrice","then","add","mul","div","catch","console","error","undefined","ethers","utils","formatEther","TakenName","provider","resolvedAddress","setResolvedAddress","reverseName","setReverseName","resolveName","lookupAddress","Validated","emoji","reason","result","children","EnterNames","setNames","setDuration","totalCost","setTotalCost","reset","maxNames","registrationYears","setRegistrationYears","newNames","setNewNames","newNamesLength","setNewNamesLength","goodNames","setGoodNames","shortNames","setShortNames","takenNames","setTakenNames","malformedNames","setMalformedNames","validateNames","setValidateNames","validateDisabled","setValidateDisabled","prices","setPrices","actualNames","filter","n","trim","length","actual","Set","short","notShort","malformed","validate","indexOf","maybeNotMalformed","maybeValid","forEach","normalized","normalize","push","e","Promise","all","map","available","availables","reduce","p","BigNumber","from","useCallback","newPrices","existingPriceIndex","findIndex","rows","value","join","onChange","split","i","years","Register","waited","names","secrets","setReset","multiRegister","useTransaction","contractCall","pending","buttonDisabled","setButtonDisabled","Body","setSecrets","showActions","setShowActions","showRegister","setShowRegister","committed","setCommitted","setWaited","Commit","Footer","web3","packageJson","version","process","networkName","providerName","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","position","closeButton","newestOnTop","document","getElementById","context","web3Context","createContext","defaultWeb3","Web3Provider","web3Provider","useProvider","Provider","useContext","_abi","inputs","internalType","type","outputs","stateMutability","IETHRegistrarController__factory","Interface","address","signerOrProvider","Contract","abi","_bytecode","MultiRegister__factory","signer","registrar_","overrides","ContractFactory","bytecode","useSystemData","multiRegisterContract","chainId","useAddresses","setMultiRegisterContract","useMultiRegisterContract","registrarContract","setRegistrarContract","getRegistrar","registrarAddress","useRegistrarContract","dataContext","DataProvider","data","supportedChains","parseInt","addresses","setAddresses","multiRegisterAddress","JSON","parse","listenerProvider","web3Modal","Web3Modal","cacheProvider","connected","provided","makeInjectedProvider","a","getNetwork","getSigner","getAddress","customProvider","getInjectedProvider","resolve","reject","userSuppliedProvider","providers","setWeb3Provider","reloadedProvider","myProvider","setMyProvider","on","includes","toast","toastId","clearCachedProvider","off","accounts","removeAllListeners","useListeners","cachedProvider","network","defaultProvider","getDefaultProvider","getFallbackProvider","setPending","contractFn","pendingMessage","failedMessage","successMessage","failedCallback","successCallback","completedCallback","autoClose","closeOnClick","draggable","txResponse","setTimeout","wait","txReceipt","dismiss","status","code","commitments","setCommitments","disableButton","setDisableButton","totalWait","countdown","setCountdown","labels","keccak256","Buffer","_","randomBytes","solidityKeccak256","interval","setInterval","newCountdown","clearInterval","multiCommit"],"mappings":"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","file":"static/js/main.0cd8bc5c.chunk.js","sourcesContent":["import { useWeb3 } from './web3';\nimport { connect } from './web3/providers';\nimport Button from './Button';\n\nfunction Header() {\n  const { account } = useWeb3();\n\n  return (\n    <div className=\"py-4 mb-4 bg-gray-100 border-b\">\n      <div className=\"container flex justify-between items-center\">\n        <div className=\"text-4xl mr-2\">\n          ENSDAO Multi Register\n        </div>\n        <div className=\"text-right\">\n          {!account && (\n            <Button\n              onClick={connect}\n              disabled={false}\n            >\n              Connect wallet\n            </Button>\n          )}\n          {account && (\n            <div>Connected with <a\n              className=\"mr-1\"\n              href={`https://app.ens.domains/address/${account}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {account.substring(0, 6)}...{account.slice(-4)}\n            </a></div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { useState, useEffect, useCallback } from 'react';\nimport { BigNumber, ethers } from 'ethers';\nimport { normalize } from '@ensdomains/eth-ens-namehash';\nimport { validate } from '@ensdomains/ens-validation';\nimport { useData } from './data';\nimport { useWeb3 } from './web3';\nimport Button from './Button';\n\nfunction GoodName({\n  name,\n  duration,\n  addToTotalCost,\n}: {\n  name: string,\n  duration: number,\n  addToTotalCost: (name: string, price: BigNumber) => void,\n}) {\n  const { contracts: { registrar } } = useData();\n  const [fullName] = useState(`${name}.eth`)\n  const [price, setPrice] = useState<BigNumber>();\n\n  useEffect(() => {\n    if (!registrar) {\n      setPrice(undefined);\n      return;\n    }\n\n    registrar.rentPrice(name, duration)\n      .then(rentPrice => setPrice(rentPrice.add(rentPrice.mul(10).div(100))))\n      .catch(console.error);\n  }, [name, registrar, duration]);\n\n  useEffect(() => {\n    if (!price) {\n      return;\n    }\n\n    addToTotalCost(name, price);\n  }, [addToTotalCost, name, price]);\n\n  return (\n    <li>{fullName} {price && <span className=\"text-sm\">({ethers.utils.formatEther(price)}Ξ)</span>}</li>\n  );\n}\n\nfunction TakenName({\n  name,\n}: {\n  name: string,\n}) {\n  const { provider } = useWeb3();\n  const [fullName] = useState(`${name}.eth`)\n  const [resolvedAddress, setResolvedAddress] = useState(\"\");\n  const [reverseName, setReverseName] = useState(\"\");\n\n  useEffect(() => {\n    if (!provider) {\n      setResolvedAddress(\"\");\n      return;\n    }\n\n    provider.resolveName(fullName)\n      .then(setResolvedAddress)\n      .catch(console.error);\n  }, [name, provider, fullName]);\n\n  useEffect(() => {\n    if (!provider || !resolvedAddress) {\n      setReverseName(\"\");\n      return;\n    }\n\n    provider.lookupAddress(resolvedAddress)\n      .then(setReverseName)\n      .catch(console.error);\n  }, [provider, resolvedAddress]);\n\n  return (\n    <li>\n      <a\n        className=\"mr-1\"\n        href={`https://app.ens.domains/name/${fullName}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {fullName}\n      </a>\n      {resolvedAddress && (\n        <span className=\"text-sm\">(resolves to <a\n          href={`https://app.ens.domains/address/${resolvedAddress}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {resolvedAddress}\n        </a>{reverseName && (\n          <span className=\"ml-1\">(<a\n            href={`https://app.ens.domains/name/${reverseName}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {reverseName}\n          </a>)</span>\n        )})</span>\n      )}\n    </li>\n  );\n}\n\nfunction Validated({\n  emoji,\n  reason,\n  result,\n  children,\n}: {\n  emoji: string,\n  reason: string,\n  result: string,\n  children: React.ReactNode,\n}) {\n  return (\n    <div className=\"mb-4\">\n      <div className=\"text-2xl mb-2\">\n        {emoji} These names are <span className=\"font-bold\">{reason}</span> and will be <span className=\"uppercase font-bold\">{result}</span>\n      </div>\n      <ol className=\"list-decimal list-inside\">\n        {children}\n      </ol>\n    </div>\n  );\n}\n\nfunction EnterNames({\n  setNames,\n  duration,\n  setDuration,\n  totalCost,\n  setTotalCost,\n  reset,\n}: {\n  setNames: React.Dispatch<React.SetStateAction<string[]>>,\n  duration: number,\n  setDuration: React.Dispatch<React.SetStateAction<number>>,\n  totalCost: BigNumber,\n  setTotalCost: React.Dispatch<React.SetStateAction<BigNumber>>,\n  reset: boolean,\n}) {\n  const { contracts: { registrar } } = useData();\n\n  const [maxNames] = useState(100);\n  const [registrationYears, setRegistrationYears] = useState(1);\n  const [newNames, setNewNames] = useState<string[]>([]);\n  const [newNamesLength, setNewNamesLength] = useState(0);\n  const [goodNames, setGoodNames] = useState<string[]>([]);\n  const [shortNames, setShortNames] = useState<string[]>([]);\n  const [takenNames, setTakenNames] = useState<string[]>([]);\n  const [malformedNames, setMalformedNames] = useState<string[]>([]);\n  const [validateNames, setValidateNames] = useState(false);\n  const [validateDisabled, setValidateDisabled] = useState(true);\n  const [prices, setPrices] = useState<{ name: string, price: BigNumber }[]>([]);\n\n  useEffect(() => {\n    const actualNames = newNames.filter(n => n.trim().length > 0);\n    setNewNamesLength(actualNames.length)\n  }, [newNames]);\n\n  useEffect(() => {\n    setValidateDisabled(newNamesLength === 0 || validateNames || newNamesLength > maxNames);\n  }, [maxNames, newNamesLength, validateNames]);\n\n  useEffect(() => {\n    setNames(goodNames);\n  }, [goodNames, setNames]);\n\n  useEffect(() => {\n    setDuration(60 * 60 * 24 * 365 * registrationYears);\n  }, [registrationYears, setDuration]);\n\n  useEffect(() => {\n    if (!validateNames || !registrar) {\n      setGoodNames([]);\n      setShortNames([]);\n      setMalformedNames([]);\n      setTakenNames([]);\n      setPrices([]);\n      return;\n    }\n\n    const unique = [...new Set(newNames)];\n    const actual = unique.filter(n => n.trim().length > 0);\n    const short = actual.filter(n => n.length < 3);\n    setShortNames(short);\n\n    const notShort = actual.filter(n => n.length >= 3);\n    const malformed = notShort.filter(n => !validate(n) || n.indexOf(\".\") > -1);\n    const maybeNotMalformed = notShort.filter(n => validate(n) && n.indexOf(\".\") === -1);\n    let maybeValid: string[] = [];\n    maybeNotMalformed.forEach(n => {\n      try {\n        const normalized = normalize(n);\n        maybeValid.push(normalized);\n      } catch (e) {\n        malformed.push(n);\n      }\n    });\n    setMalformedNames(malformed);\n\n    Promise.all(maybeValid.map(n => Promise.all([n, registrar.available(n)])))\n      .then(availables => {\n        setTakenNames(availables.filter(([, available]) => !available).map(([name]) => name));\n        setGoodNames(availables.filter(([, available]) => available).map(([name]) => name));\n      })\n      .catch(console.error);\n  }, [newNames, registrar, setTotalCost, validateNames]);\n\n  useEffect(() => {\n    setTotalCost(prices.reduce((p, n) => p.add(n.price), BigNumber.from(0)));\n  }, [setTotalCost, prices]);\n\n  useEffect(() => {\n    if (reset) {\n      setValidateNames(false);\n    }\n  }, [reset]);\n\n  const addToTotalCost = useCallback((name: string, price: BigNumber) => {\n    setPrices(prices => {\n      const newPrices = [...prices];\n      const existingPriceIndex = newPrices.findIndex(p => p.name === name);\n      if (existingPriceIndex === -1) {\n        newPrices.push({ name, price });\n      } else {\n        newPrices[existingPriceIndex].price = price;\n      }\n      return newPrices;\n    });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"mb-4\">\n        <div className=\"text-2xl mb-2\">\n          Register Multiple Names\n        </div>\n\n        <div className=\"flex justify-between\">\n          <div className=\"text-sm\">\n            One new ENS name per line, don't include <span className=\"font-mono\">.eth</span>\n          </div>\n          <div className=\"text-sm\">\n            {newNamesLength}/{maxNames}\n          </div>\n        </div>\n\n        <textarea\n          className=\"w-full border p-2\"\n          rows={10}\n          value={newNames.join(`\\n`)}\n          disabled={validateNames}\n          onChange={(e) => setNewNames(e.target.value.split(`\\n`).map(n => n.trim()))}\n        />\n\n        <div className=\"flex\">\n          <Button\n            disabled={validateDisabled}\n            onClick={() => setValidateNames(true)}\n          >\n            Validate names\n          </Button>\n          <div className=\"mx-1\" />\n          <Button\n            disabled={!validateNames}\n            onClick={() => setValidateNames(false)}\n          >\n            Edit names\n          </Button>\n        </div>\n      </div>\n\n      {shortNames.length > 0 && (\n        <Validated emoji={`👎`} reason=\"too short\" result=\"skipped\">\n          {shortNames.map((n, i) => <li key={i}>{n}</li>)}\n        </Validated>\n      )}\n\n      {takenNames.length > 0 && (\n        <Validated emoji={`👎`} reason=\"already taken\" result=\"skipped\">\n          {takenNames.map((n, i) => (\n            <TakenName\n              key={i}\n              name={n}\n            />\n          ))}\n        </Validated>\n      )}\n\n      {malformedNames.length > 0 && (\n        <Validated emoji={`👎`} reason=\"malformed\" result=\"skipped\">\n          {malformedNames.map((n, i) => <li key={i}>{n}</li>)}\n        </Validated>\n      )}\n\n      {goodNames.length > 0 && (\n        <Validated emoji={`👍`} reason=\"looking good\" result=\"registered\">\n          {goodNames.map((n, i) => (\n            <GoodName\n              key={i}\n              name={n}\n              duration={duration}\n              addToTotalCost={addToTotalCost}\n            />\n          ))}\n          <div className=\"my-2 flex items-center\">\n            <div>\n              <Button\n                disabled={registrationYears === 1}\n                onClick={() => setRegistrationYears(years => years - 1)}\n              >\n                -\n              </Button>\n            </div>\n            <div className=\"mx-2\">\n              {registrationYears} {registrationYears > 1 ? \"years\" : \"year\"}\n            </div>\n            <div>\n              <Button\n                disabled={false}\n                onClick={() => setRegistrationYears(years => years + 1)}\n              >\n                +\n              </Button>\n            </div>\n          </div>\n          <div>\n            <div className=\"text-xl font-bold\">Total cost</div>\n            <div>{ethers.utils.formatEther(totalCost)}Ξ</div>\n          </div>\n        </Validated>\n      )}\n    </div>\n  );\n}\n\nexport default EnterNames;\n","import { useState, useEffect } from 'react';\nimport { BigNumber } from 'ethers';\nimport { useData } from './data';\nimport { useWeb3 } from './web3';\nimport { useTransaction } from './web3/transactions';\nimport Button from './Button';\n\nfunction Register({\n  waited,\n  names,\n  secrets,\n  duration,\n  totalCost,\n  setReset,\n}: {\n  waited: boolean,\n  names: string[],\n  secrets: Uint8Array[],\n  duration: number,\n  totalCost: BigNumber,\n  setReset: React.Dispatch<React.SetStateAction<boolean>>,\n}) {\n  const { contracts: { multiRegister } } = useData();\n  const { account } = useWeb3();\n  const { contractCall, pending } = useTransaction();\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n\n  useEffect(() => {\n    setButtonDisabled(pending || !waited);\n  }, [waited, pending]);\n\n  const register = () => {\n    if (!account || !multiRegister) {\n      return;\n    }\n\n    contractCall(\n      () => multiRegister.multiRegister(account, duration, names, secrets, { value: totalCost }),\n      \"Registering names\", \"Registering names failed\", \"Registering names succeeded\",\n      undefined, () => setReset(true),\n    );\n  }\n\n  return (\n    <div className=\"mt-4\">\n      {secrets.length === names.length && (\n        <Button\n          disabled={buttonDisabled}\n          onClick={register}\n        >\n          Register names\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default Register;\n","import { useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport EnterNames from './EnterNames';\nimport Commit from './Commit';\nimport Register from './Register';\nimport { useWeb3 } from './web3';\n\nfunction Body() {\n  const { account } = useWeb3();\n  const [names, setNames] = useState<string[]>([]);\n  const [secrets, setSecrets] = useState<Uint8Array[]>([]);\n  const [duration, setDuration] = useState<number>(0);\n  const [totalCost, setTotalCost] = useState(BigNumber.from(0))\n  const [showActions, setShowActions] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [committed, setCommitted] = useState(false);\n  const [waited, setWaited] = useState(false);\n  const [reset, setReset] = useState(false);\n\n  useEffect(() => {\n    if (reset) {\n      setReset(false);\n    }\n  }, [reset]);\n\n  useEffect(() => {\n    setShowActions(!!account && names.length > 0);\n  }, [account, names.length]);\n\n  useEffect(() => {\n    setShowRegister(committed);\n  }, [committed]);\n\n  return (\n    <div className=\"container\">\n      <EnterNames\n        setNames={setNames}\n        duration={duration}\n        setDuration={setDuration}\n        totalCost={totalCost}\n        setTotalCost={setTotalCost}\n        reset={reset}\n      />\n      {showActions && (\n        <div>\n          <Commit\n            committed={committed}\n            setCommitted={setCommitted}\n            setWaited={setWaited}\n            names={names}\n            setSecrets={setSecrets}\n            reset={reset}\n          />\n          {showRegister && (\n            <Register\n              waited={waited}\n              names={names}\n              secrets={secrets}\n              duration={duration}\n              totalCost={totalCost}\n              setReset={setReset}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Body;\n","import { useWeb3 } from './web3'\nimport packageJson from './../package.json'\n\nfunction Footer() {\n  const web3 = useWeb3();\n\n  return (\n    <div className=\"py-2 mt-4 border-t bg-gray-100 text-sm\">\n      <div className=\"container flex justify-between items-center\">\n        <div className=\"font-mono\">v{packageJson.version}{process.env.REACT_APP_GIT_HASH && `+${process.env.REACT_APP_GIT_HASH}`}</div>\n        <div>{web3.networkName && `${web3.networkName} via `}{web3.providerName}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <div className=\"flex flex-col justify-between min-h-screen\">\n      <div className=\"flex-grow flex flex-col\">\n        <Header />\n        <Body />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ToastContainer } from 'react-toastify';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Web3Provider } from './web3';\nimport { DataProvider } from './data';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Provider>\n      <DataProvider>\n        <ToastContainer\n          position=\"bottom-right\"\n          closeButton={false}\n          newestOnTop={false}\n        />\n        <App />\n      </DataProvider>\n    </Web3Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { createContext, useContext } from 'react';\nimport { Web3Custom, useProvider, defaultWeb3 } from './providers';\n\nconst createWeb3Root = (context: React.Context<Web3Custom>) => {\n  const Web3Root = ({ children }: { children: React.ReactNode }) => {\n    const web3Provider = useProvider();\n\n    return (\n      <context.Provider value={web3Provider}>\n        {children}\n      </context.Provider>\n    );\n  };\n\n  return Web3Root;\n};\n\nconst web3Context = createContext(defaultWeb3);\n\nconst Web3Provider = createWeb3Root(web3Context);\n\nconst useWeb3 = () => {\n  return useContext(web3Context);\n};\n\nexport { Web3Provider, useWeb3 };\n","function Button({\n  disabled,\n  onClick,\n  children,\n}: {\n  disabled: boolean,\n  onClick: () => void,\n  children: React.ReactNode,\n}) {\n  return (\n    <button\n      className={`px-4 py-2 border rounded ${disabled ? \"text-gray-400 cursor-default\" : \"\"}`}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport default Button;\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\nimport type {\n  IETHRegistrarController,\n  IETHRegistrarControllerInterface,\n} from \"../IETHRegistrarController\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n    ],\n    name: \"available\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"commitment\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"commit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"duration\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"secret\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"register\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"duration\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"rentPrice\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport class IETHRegistrarController__factory {\n  static readonly abi = _abi;\n  static createInterface(): IETHRegistrarControllerInterface {\n    return new utils.Interface(_abi) as IETHRegistrarControllerInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): IETHRegistrarController {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as IETHRegistrarController;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { MultiRegister, MultiRegisterInterface } from \"../MultiRegister\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"registrar_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"getRegistrar\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32[]\",\n        name: \"commitments\",\n        type: \"bytes32[]\",\n      },\n    ],\n    name: \"multiCommit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"duration\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"string[]\",\n        name: \"names\",\n        type: \"string[]\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"secrets\",\n        type: \"bytes32[]\",\n      },\n    ],\n    name: \"multiRegister\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50604051610c08380380610c08833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610af1806101176000396000f3fe6080604052600436106100345760003560e01c80634d3f7334146100395780636e61accc14610064578063d16050e614610080575b600080fd5b34801561004557600080fd5b5061004e6100a9565b60405161005b9190610514565b60405180910390f35b61007e60048036038101906100799190610656565b6100d2565b005b34801561008c57600080fd5b506100a760048036038101906100a291906106fd565b610409565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b81819050848490501461011a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610111906107a7565b60405180910390fd5b60005b848490508110156103b95760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aeb8ce9b868684818110610177576101766107c7565b5b90506020028101906101899190610805565b6040518363ffffffff1660e01b81526004016101a69291906108b5565b60206040518083038186803b1580156101be57600080fd5b505afa1580156101d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f69190610911565b6101ff576103a6565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383e7f6ff878785818110610251576102506107c7565b5b90506020028101906102639190610805565b8a6040518463ffffffff1660e01b81526004016102829392919061094d565b60206040518083038186803b15801561029a57600080fd5b505afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d29190610994565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166385f6d15582888886818110610324576103236107c7565b5b90506020028101906103369190610805565b8c8c8a8a8a81811061034b5761034a6107c7565b5b905060200201356040518763ffffffff1660e01b81526004016103729594939291906109da565b6000604051808303818588803b15801561038b57600080fd5b505af115801561039f573d6000803e3d6000fd5b5050505050505b80806103b190610a57565b91505061011d565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610400573d6000803e3d6000fd5b50505050505050565b60005b828290508110156104ce5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f14fcbc8848484818110610466576104656107c7565b5b905060200201356040518263ffffffff1660e01b81526004016104899190610aa0565b600060405180830381600087803b1580156104a357600080fd5b505af11580156104b7573d6000803e3d6000fd5b5050505080806104c690610a57565b91505061040c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104fe826104d3565b9050919050565b61050e816104f3565b82525050565b60006020820190506105296000830184610505565b92915050565b600080fd5b600080fd5b610542816104f3565b811461054d57600080fd5b50565b60008135905061055f81610539565b92915050565b6000819050919050565b61057881610565565b811461058357600080fd5b50565b6000813590506105958161056f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126105c0576105bf61059b565b5b8235905067ffffffffffffffff8111156105dd576105dc6105a0565b5b6020830191508360208202830111156105f9576105f86105a5565b5b9250929050565b60008083601f8401126106165761061561059b565b5b8235905067ffffffffffffffff811115610633576106326105a0565b5b60208301915083602082028301111561064f5761064e6105a5565b5b9250929050565b600080600080600080608087890312156106735761067261052f565b5b600061068189828a01610550565b965050602061069289828a01610586565b955050604087013567ffffffffffffffff8111156106b3576106b2610534565b5b6106bf89828a016105aa565b9450945050606087013567ffffffffffffffff8111156106e2576106e1610534565b5b6106ee89828a01610600565b92509250509295509295509295565b600080602083850312156107145761071361052f565b5b600083013567ffffffffffffffff81111561073257610731610534565b5b61073e85828601610600565b92509250509250929050565b600082825260208201905092915050565b7f6172726179206c656e677468206d69736d617463680000000000000000000000600082015250565b600061079160158361074a565b915061079c8261075b565b602082019050919050565b600060208201905081810360008301526107c081610784565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112610822576108216107f6565b5b80840192508235915067ffffffffffffffff821115610844576108436107fb565b5b6020830192506001820236038313156108605761085f610800565b5b509250929050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610894838561074a565b93506108a1838584610868565b6108aa83610877565b840190509392505050565b600060208201905081810360008301526108d0818486610888565b90509392505050565b60008115159050919050565b6108ee816108d9565b81146108f957600080fd5b50565b60008151905061090b816108e5565b92915050565b6000602082840312156109275761092661052f565b5b6000610935848285016108fc565b91505092915050565b61094781610565565b82525050565b60006040820190508181036000830152610968818587610888565b9050610977602083018461093e565b949350505050565b60008151905061098e8161056f565b92915050565b6000602082840312156109aa576109a961052f565b5b60006109b88482850161097f565b91505092915050565b6000819050919050565b6109d4816109c1565b82525050565b600060808201905081810360008301526109f5818789610888565b9050610a046020830186610505565b610a11604083018561093e565b610a1e60608301846109cb565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a6282610565565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9557610a94610a28565b5b600182019050919050565b6000602082019050610ab560008301846109cb565b9291505056fea264697066735822122029b6c737c3c823ef6c944593a7a127e40213a62ebac2c478f91956bc5af86b3e64736f6c63430008080033\";\n\nexport class MultiRegister__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    registrar_: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<MultiRegister> {\n    return super.deploy(registrar_, overrides || {}) as Promise<MultiRegister>;\n  }\n  getDeployTransaction(\n    registrar_: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(registrar_, overrides || {});\n  }\n  attach(address: string): MultiRegister {\n    return super.attach(address) as MultiRegister;\n  }\n  connect(signer: Signer): MultiRegister__factory {\n    return super.connect(signer) as MultiRegister__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): MultiRegisterInterface {\n    return new utils.Interface(_abi) as MultiRegisterInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): MultiRegister {\n    return new Contract(address, _abi, signerOrProvider) as MultiRegister;\n  }\n}\n","import {\n  MultiRegister,\n  IETHRegistrarController,\n} from '../../contracts/typechain';\n\nimport {\n  useMultiRegisterContract,\n  useRegistrarContract,\n} from './contracts';\n\nexport interface Data {\n  contracts: {\n    multiRegister: MultiRegister | undefined,\n    registrar: IETHRegistrarController | undefined,\n  },\n};\n\nfunction useSystemData() {\n  const multiRegisterContract = useMultiRegisterContract();\n  const registrarContract = useRegistrarContract(multiRegisterContract);\n  \n  const data: Data = {\n    contracts: {\n      multiRegister: multiRegisterContract,\n      registrar: registrarContract,\n    },\n  };\n\n  return data;\n}\n\nexport { useSystemData };\n","import { useState, useEffect } from 'react';\nimport { useWeb3 } from '../web3';\nimport { useAddresses } from '../web3/chains';\nimport {\n  MultiRegister, MultiRegister__factory,\n  IETHRegistrarController, IETHRegistrarController__factory,\n} from '../../contracts/typechain';\n\nconst useMultiRegisterContract = () => {\n  const { chainId, signerOrProvider } = useWeb3();\n  const { multiRegister } = useAddresses(chainId);\n  const [multiRegisterContract, setMultiRegisterContract] = useState<MultiRegister>();\n\n  useEffect(() => {\n    if (!chainId || !multiRegister || !signerOrProvider) {\n      setMultiRegisterContract(undefined);\n      return;\n    }\n\n    setMultiRegisterContract(MultiRegister__factory.connect(multiRegister, signerOrProvider));\n  }, [chainId, multiRegister, signerOrProvider]);\n\n  return multiRegisterContract;\n}\n\nconst useRegistrarContract = (multiRegisterContract: MultiRegister | undefined) => {\n  const { signerOrProvider } = useWeb3();\n  const [registrarContract, setRegistrarContract] = useState<IETHRegistrarController>();\n\n  useEffect(() => {\n    if (!multiRegisterContract || !signerOrProvider) {\n      setRegistrarContract(undefined);\n      return;\n    }\n\n    multiRegisterContract.getRegistrar()\n      .then(registrarAddress => setRegistrarContract(IETHRegistrarController__factory.connect(registrarAddress, signerOrProvider)))\n      .catch(console.error);\n  }, [multiRegisterContract, signerOrProvider]);\n\n  return registrarContract;\n}\n\nexport {\n  useMultiRegisterContract,\n  useRegistrarContract,\n}\n","import { createContext, useContext } from 'react';\nimport { Data, useSystemData } from './data';\n\nconst createDataRoot = (context: React.Context<Data>) => {\n  const DataRoot = ({ children }: { children: React.ReactNode }) => {\n    const data = useSystemData();\n\n    return (\n      <context.Provider value={data}>\n        {children}\n      </context.Provider>\n    );\n  }\n\n  return DataRoot;\n}\n\nconst dataContext = createContext({} as Data);\n\nconst DataProvider = createDataRoot(dataContext);\n\nconst useData = () => {\n  return useContext(dataContext);\n};\n\nexport { DataProvider, useData };","import { useState, useEffect } from 'react';\n\nconst supportedChains = () => {\n  const dev = process.env.NODE_ENV !== 'production' ? [parseInt(process.env.REACT_APP_LOCAL_CHAIN_ID || \"0\", 10)] : [];\n  const supported = [...dev, ...(process.env.REACT_APP_SUPPORTED_CHAIN_IDS || \"\").split(\",\").map(i => parseInt(i, 10))];\n  return supported;\n};\n\nconst useAddresses = (chainId: number | undefined) => {\n  const [addresses, setAddresses] = useState<{ multiRegister?: string }>({});\n\n  useEffect(() => {\n    if (!chainId) return;\n\n    if (\n      process.env.REACT_APP_LOCAL_CHAIN_ID &&\n      chainId === parseInt(process.env.REACT_APP_LOCAL_CHAIN_ID, 10)\n    ) {\n      if (!process.env.REACT_APP_LOCAL_MULTI_REGISTER_ADDRESS) {\n        console.error(\"No local addresses have been set!\");\n        setAddresses({});\n        return;\n      }\n\n      setAddresses({\n        multiRegister: process.env.REACT_APP_LOCAL_MULTI_REGISTER_ADDRESS,\n      });\n    } else {\n      if (!process.env.REACT_APP_MULTI_REGISTER_ADDRESSES) {\n        console.error(\"No addresses have been set!\");\n        setAddresses({});\n        return;\n      }\n\n      const networksAddresses = JSON.parse(process.env.REACT_APP_MULTI_REGISTER_ADDRESSES);\n      const multiRegisterAddress: string = networksAddresses[chainId];\n\n      if (!multiRegisterAddress) {\n        console.error(`Address for network ${chainId} is not set!`);\n        setAddresses({});\n        return;\n      }\n\n      setAddresses({\n        multiRegister: multiRegisterAddress,\n      });\n    }\n  }, [chainId]);\n\n  return addresses;\n};\n\nexport {\n  supportedChains,\n  useAddresses\n};\n","import { useEffect, useState } from 'react';\nimport { ethers, getDefaultProvider } from 'ethers';\nimport Web3Modal from 'web3modal';\nimport { supportedChains } from './chains';\nimport { useListeners } from './listeners';\n\nexport interface Web3Custom {\n  connected: boolean,\n  provided: boolean,\n  providerName: string,\n  networkName?: string,\n  account?: string,\n  chainId?: number,\n  provider?: ethers.providers.Provider,\n  signerOrProvider?: ethers.providers.Provider | ethers.Signer,\n};\n\nlet listenerProvider: ethers.providers.Provider;\n\ninterface ProviderApiKeys {\n  infura?: string,\n  alchemy?: string,\n  etherscan?: string,\n};\n\nconst web3Modal = new Web3Modal({\n  cacheProvider: true,\n});\n\nexport const defaultWeb3: Web3Custom = {\n  connected: false,\n  provided: false,\n  providerName: 'not connected',\n};\n\nconst makeInjectedProvider = async (web3Provider: ethers.providers.Web3Provider) => {\n  const local =\n    process.env.REACT_APP_LOCAL_CHAIN_ID &&\n    (await web3Provider.getNetwork()).chainId === parseInt(process.env.REACT_APP_LOCAL_CHAIN_ID, 10);\n\n  const customProvider: Web3Custom = {\n    connected: true,\n    provided: true,\n    providerName: 'injected provider',\n    networkName: local ? 'localhost' : (await web3Provider.getNetwork()).name,\n    account: await web3Provider.getSigner().getAddress(),\n    chainId: (await web3Provider.getNetwork()).chainId,\n    provider: web3Provider,\n    signerOrProvider: web3Provider.getSigner(),\n  };\n\n  listenerProvider = web3Provider.provider as ethers.providers.Provider;\n\n  return customProvider;\n}\n\nconst getInjectedProvider = (web3Modal: Web3Modal) => {\n  return new Promise<Web3Custom>((resolve, reject) => {\n    web3Modal.connect()\n      .then(userSuppliedProvider => makeInjectedProvider(new ethers.providers.Web3Provider(userSuppliedProvider)))\n      .then(resolve)\n      .catch(reject);\n  });\n}\n\nconst getLocalProvider = () => {\n  const localProvider = new ethers.providers.JsonRpcProvider(process.env.REACT_APP_LOCAL_PROVIDER_URL);\n  return new Promise<Web3Custom>((resolve, reject) => {\n    localProvider.detectNetwork().then(network => {\n      resolve({\n        connected: true,\n        provided: true,\n        providerName: 'local provider',\n        networkName: 'localhost',\n        account: '',\n        chainId: network.chainId,\n        provider: localProvider,\n        signerOrProvider: localProvider,\n      });\n    }).catch(reject);\n  });\n}\n\nconst getFallbackProvider = () => {\n  const providerApiKeys: ProviderApiKeys = {};\n  if (process.env.REACT_APP_INFURA_API_KEY) providerApiKeys.infura = process.env.REACT_APP_INFURA_API_KEY;\n  if (process.env.REACT_APP_ALCHEMY_API_KEY) providerApiKeys.alchemy = process.env.REACT_APP_ALCHEMY_API_KEY;\n  if (process.env.REACT_APP_ETHERSCAN_API_KEY) providerApiKeys.etherscan = process.env.REACT_APP_ETHERSCAN_API_KEY;\n\n  const network = ethers.providers.getNetwork(parseInt(process.env.REACT_APP_FALLBACK_CHAIN_ID || \"0\", 10));\n  const defaultProvider = getDefaultProvider(network, providerApiKeys);\n\n  const provider: Web3Custom = {\n    connected: true,\n    provided: false,\n    providerName: 'fallback provider',\n    networkName: defaultProvider.network.name,\n    account: '',\n    chainId: defaultProvider.network.chainId,\n    provider: defaultProvider,\n    signerOrProvider: defaultProvider,\n  };\n\n  return provider;\n}\n\nconst useProvider = () => {\n  const [web3Provider, setWeb3Provider] = useState(defaultWeb3);\n\n  const reloadedProvider = useListeners(listenerProvider, web3Modal);\n  useEffect(() => {\n    if (!reloadedProvider) {\n      setWeb3Provider(defaultWeb3);\n    } else {\n      makeInjectedProvider(reloadedProvider)\n        .then(setWeb3Provider)\n        .catch(console.error);\n    }\n  }, [reloadedProvider]);\n\n  useEffect(() => {\n    if (web3Provider.connected) return;\n\n    if (web3Modal.cachedProvider && !web3Provider.provider) {\n      getInjectedProvider(web3Modal)\n        .then(setWeb3Provider)\n        .catch(console.error);\n\n      return;\n    }\n\n    if (web3Provider.provider) {\n      web3Provider.provider.getNetwork()\n        .then(network => {\n          if (supportedChains().includes(network.chainId)) {\n            getInjectedProvider(web3Modal)\n              .then(setWeb3Provider)\n              .catch(console.error);\n\n            return;\n          }\n        })\n        .catch(console.error);\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      getLocalProvider()\n        .then(setWeb3Provider)\n        .catch(() => setWeb3Provider(getFallbackProvider()));\n\n      return;\n    }\n\n    setWeb3Provider(getFallbackProvider());\n  }, [web3Provider.connected, web3Provider.provider]);\n\n  return web3Provider;\n}\n\nconst connect = () => {\n  web3Modal.connect().catch(console.error);\n}\n\nexport { useProvider, connect };\n","import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { toast } from 'react-toastify';\nimport Web3Modal from 'web3modal';\nimport { supportedChains } from './chains';\n\nconst useListeners = (provider: ethers.providers.Provider | undefined, web3Modal: Web3Modal) => {\n  const [myProvider, setMyProvider] = useState<ethers.providers.Web3Provider | null>(null);\n\n  useEffect(() => {\n    // subscribe to connect events\n    web3Modal.on('connect', provider => {\n      if (!supportedChains().includes(parseInt(provider.chainId))) {\n        toast(`Switch to a supported network: ${supportedChains().join(\", \")}`, { toastId: 'switchNetwork' });\n        web3Modal.clearCachedProvider();\n        setMyProvider(null);\n      } else {\n        const web3Provider = new ethers.providers.Web3Provider(provider);\n        setMyProvider(web3Provider);\n        toast('Connected', { toastId: 'connected' });\n      }\n    });\n\n    return () => {\n      web3Modal.off('connect');\n    };\n  }, [web3Modal]);\n\n  useEffect(() => {\n    if (!provider) return;\n\n    // subscribe to Network events\n    provider.on('chainChanged', (chainId: string) => {\n      if (!supportedChains().includes(parseInt(chainId))) {\n        toast(`Switch to a supported network: ${supportedChains().join(\", \")}`, { toastId: 'switchNetwork' });\n        web3Modal.clearCachedProvider();\n        setMyProvider(null);\n      } else {\n        toast('Network changed', { toastId: 'switchNetwork' });\n        const web3Provider = new ethers.providers.Web3Provider(provider as any);\n        setMyProvider(web3Provider);\n      };\n    });\n\n    // subscribe to account change events\n    provider.on('accountsChanged', (accounts: string[]) => {\n      if (accounts.length === 0) {\n        toast('Account disconnected', { toastId: 'disconnected' });\n        web3Modal.clearCachedProvider();\n        setMyProvider(null);\n      } else {\n        toast('Account changed', { toastId: 'connected' });\n        web3Modal.connect();\n      }\n    });\n\n    // subscribe to provider disconnection\n    provider.on('disconnect', () => {\n      toast('Account disconnected', { toastId: 'disconnected' });\n      web3Modal.clearCachedProvider();\n      setMyProvider(null);\n    });\n\n    // unsubscribe\n    return () => {\n      provider.removeAllListeners();\n    };\n  }, [provider, web3Modal]);\n\n  return myProvider;\n}\n\nexport { useListeners };\n","import { ethers } from 'ethers';\nimport React, { useState, useCallback } from 'react';\nimport { toast } from 'react-toastify';\n\ninterface ProviderRpcError extends Error {\n  message: string;\n  code: number;\n  data?: unknown;\n}\n\nconst useTransaction = () => {\n  const [pending, setPending] = useState(false);\n\n  const contractCall = useCallback(\n    (\n      contractFn: () => Promise<ethers.ContractTransaction>,\n      pendingMessage: string,\n      failedMessage: string,\n      successMessage: string,\n      failedCallback?: () => void,\n      successCallback?: () => void,\n      completedCallback?: () => void\n    ) => {\n      setPending(true);\n      let toastId: React.ReactText;\n      toastId = toast(pendingMessage, {\n        autoClose: false,\n        closeOnClick: false,\n        draggable: false,\n        closeButton: false,\n      });\n      contractFn()\n        .then((txResponse: ethers.ContractTransaction) => {\n          const wait =\n            process.env.NODE_ENV !== \"development\"\n              ? 0\n              : process.env.REACT_APP_DEVELOPMENT_TX_WAIT_MS\n                ? parseInt(process.env.REACT_APP_DEVELOPMENT_TX_WAIT_MS)\n                : 0\n\n          return Promise.all([\n            new Promise(resolve => setTimeout(\n              () => resolve(null),\n              wait\n            )).then(() => txResponse.wait()),\n            toastId\n          ]);\n        })\n        .then(([txReceipt, toastId]) => {\n          setPending(false);\n          toast.dismiss(toastId);\n          if (txReceipt.status === 0) {\n            toast.error(failedMessage);\n            if (failedCallback) failedCallback();\n          } else if (txReceipt.status === 1) {\n            toast(successMessage);\n            if (successCallback) successCallback();\n          } else {\n            toast.error(\"Not sure what happened with that transaction\");\n            if (failedCallback) failedCallback();\n          }\n          if (completedCallback) completedCallback();\n        })\n        .catch((error: ProviderRpcError) => {\n          console.error(error);\n          setPending(false);\n          toast.dismiss(toastId);\n          if (error.code !== 4001) {\n            toast.error(\"There was an error! Check your browser's console logs for more details.\");\n          }\n          if (failedCallback) failedCallback();\n        });\n    }, []);\n\n  return { contractCall, pending };\n}\n\nexport { useTransaction };\n","import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { useData } from './data';\nimport { useWeb3 } from './web3';\nimport { useTransaction } from './web3/transactions';\nimport Button from './Button';\n\nfunction Commit({\n  committed,\n  setCommitted,\n  setWaited,\n  names,\n  setSecrets,\n  reset,\n}: {\n  committed: boolean,\n  setCommitted: React.Dispatch<React.SetStateAction<boolean>>,\n  setWaited: React.Dispatch<React.SetStateAction<boolean>>,\n  names: string[],\n  setSecrets: React.Dispatch<React.SetStateAction<Uint8Array[]>>,\n  reset: boolean,\n}) {\n  const { contracts: { multiRegister } } = useData();\n  const { account } = useWeb3();\n  const { contractCall, pending } = useTransaction();\n  const [commitments, setCommitments] = useState<string[]>([]);\n  const [disableButton, setDisableButton] = useState(true);\n  const [totalWait] = useState(70);\n  const [countdown, setCountdown] = useState(totalWait);\n\n  useEffect(() => {\n    setDisableButton(pending || committed);\n  }, [pending, committed]);\n\n  useEffect(() => {\n    if (!account) {\n      setSecrets([]);\n      setCommitments([]);\n      return;\n    }\n\n    const labels = names.map(name => ethers.utils.keccak256(Buffer.from(name)));\n    const secrets = names.map(_ => ethers.utils.randomBytes(32));\n    setSecrets(secrets);\n    const commitments = names.map((_, i) => ethers.utils.solidityKeccak256([\"bytes32\", \"address\", \"bytes32\"], [labels[i], account, secrets[i]]));\n    setCommitments(commitments);\n  }, [account, names, setSecrets]);\n\n  useEffect(() => {\n    if (reset) {\n      setSecrets([]);\n      setCommitted(false);\n    }\n  }, [reset, setCommitted, setSecrets]);\n\n  const commit = () => {\n    if (!multiRegister) {\n      return;\n    }\n\n    contractCall(\n      () => multiRegister.multiCommit(commitments),\n      \"Committing to names\", \"Committing to names failed\", \"Committing to names succeeded\",\n      undefined, () => setCommitted(true),\n    );\n  }\n\n  useEffect(() => {\n    if (!committed) {\n      return;\n    }\n\n    const interval = setInterval(() => {\n      setCountdown(countdown => {\n        const newCountdown = countdown - 1;\n        if (newCountdown === 0) {\n          clearInterval(interval);\n        }\n        return newCountdown;\n      });\n\n    }, 1000);\n  }, [committed]);\n\n  useEffect(() => {\n    if (countdown === 0) {\n      setWaited(true);\n    }\n  }, [countdown, setWaited]);\n\n  return (\n    <div>\n      {commitments.length === names.length && (\n        <div>\n          <Button\n            disabled={disableButton}\n            onClick={commit}\n          >\n            Commit to names\n          </Button>\n          {committed && (\n            <div className=\"mt-4\">\n              <div className=\"italic text-3xl mb-2\">Don't refresh or nagivate anywhere</div>\n              <div>Wait <span className=\"font-mono\">{countdown}</span> seconds</div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Commit;\n"],"sourceRoot":""}